;Author: Mark Schmieg
;
(define (domain subExploration)
    (:requirements
        :strips
    )
    
    (:predicates
        (subResurface)
        (subDive)
        (OnBridge ?who)
        (subNotBeen ?x)
        (subRoute ?from ?to)
        (subAt ?x)
        
        (giantSquidLoc ?x)
        (giantSquid)
        (InEngineering ?who)
        (electrify ?x)
        (chargeEmpty ?x)
        (recharge ?x)
        
        (holding ?x)
        (InLab ?who)
        (Pic ?what)
        (DB ?which)
        (TransferedToDB ?what ?which)
        (report)
        (TargetLoc ?what ?where)
        (AuvInBay ?Type)
        (AuvLoc ?where)
        (InBay ?who)
        (picTransferToMem)
        (dataTransferToPort)
    )

(:action PersonelToBridge
    :parameters
        (?who)
    :effect
        (and
            (OnBridge ?who)
        )
)


(:action DiveSequence
    :precondition
        (and
            (OnBridge captain)
            (OnBridge nav)
            
        )
    :effect
        (and
            (subDive)
        )
)


(:action MoveTo
    :parameters
        (?from ?to)
    :precondition
        (and 
            (subDive)
            (OnBridge captain)
            (OnBridge nav)
            (subNotBeen ?to)
            (subAt ?from)
          
        )
    :effect
        (and
            (subRoute ?from ?to)
            (not (subAt ?from))
            (not (subNotBeen ?to))
            (subAt ?to)
        )
)

(:action PersonelToLaunchBay
    :parameters
        (?who)
    :effect 
        (and
            (InBay ?who)      
        )
)

(:action LaunchAUV
    :parameters
        (?Type ?where)
    :precondition
        (and
            (subAt ?where)
            (not(giantSquidLoc ?where))
            (InBay engineer)
            (AuvInBay ?Type)
        )
    :effect
        (and    
            (not(AuvInBay ?Type))
            (AuvLoc ?where)
        )
)

(:action RetractAUV
    :parameters
        (?Type ?where)
    :precondition
        (and
            (not(AuvInBay ?Type))
            (AuvLoc ?where)
            (InBay engineer)
            (subAt ?where)
        )
    :effect
        (and 
            (AuvInBay ?Type)
        )
        
)


(:action TakePic
    :parameters
        (?where ?what)
    :precondition
        (and
            (not(AuvInBay InspecAuv))
            (AuvLoc ?where)
            (TargetLoc ?what ?where)
        )
    :effect
        (and
            (Pic ?what)
        )
)

(:action TransferPicToSub
    :parameters
        (?what ?which)
    :precondition
        (and
            (AuvInBay InspecAuv)
            (Pic ?what)
        )
    :effect
        (and
            (TransferedToDB ?what ?which)
        )
)

)
