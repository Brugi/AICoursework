;Author: Mark Schmieg
;
(define (domain subExploration)
    (:requirements
        :strips :typing
    )
    
    (:types 
        Auv
        Personel 
        Documents
        Threat
        Location
        Treasures
        Database
    )
    (:predicates
        (Personel ?who)
        (Location ?x)
        (Auv ?Type)
        (Threat ?z)
        (Treasures ?what)
        (Database ?which)
        (Documents ?Type)
        
        (SubResurface)
        (SubDive)
        (OnBridge ?who)
        (SubNotBeen ?x)
        (SubRoute ?from ?to)
        (SubAt ?x )
        (OrderGivenToMove ?fromWho ?ToWho ?from ?to)
        
        (GiantSquidLoc ?x )
        (GiantSquid)
        (InEngineering ?who )
        (electrify ?x)
        (chargeEmpty ?x)
        (reharge ?x)
        
        (Document ?Type  ?what )
        (Artifact ?what )
        (HandEmpty)
        (Holding ?x )
        (InLab ?who )
        (ObjectInLab ?what )
        (Pic ?what )
        (DB ?which )
        (Report ?what )
        (TransferedToDB ?Type  ?what ?which )
        (TargetLoc ?what ?where )
        (ArtLoc ?what  ?where )
        (AuvInBay ?Type )
        (AuvLoc ?where )
        (InBay ?who )
        (ObjectInBay ?what )
       
    )
    
;Moves personel to the bridge.
(:action PersonelToBridge
    :parameters
        (?who - Personel)
    :effect
        (and
            (OnBridge ?who)
        )
)

;Makes the sub submerged.
(:action DiveSequence
    :precondition
        (and
            (OnBridge Captain)
            (OnBridge Navigator)
            (SubResurface)
            (not(SubDive))
        )
    :effect
        (and
            (SubDive)
            (not (SubResurface))
        )
)

;Makes the sub resurfaced.
(:action ResurfaceSequence
    :precondition
        (and
            (OnBridge Captain)
            (OnBridge Navigator)
            (SubDive)
            (not(SubResurface))
        )
    :effect
        (and
            (SubResurface)
            (not(SubDive))
        )
)

(:action GiveOrder
    :parameters
        (?from - Location ?to - Location)
    :precondition
        (and
            (OnBridge Captain)
            (OnBridge Navigator)
        )
    :effect 
        (OrderGivenToMove Captain Navigator ?from ?to)
)

;Moves the sub from one location to another.
(:action MoveTo
    :parameters
        (?from - Location ?to - Location)
    :precondition
        (and 
            (OrderGivenToMove Captain Navigator ?from ?to )
            (SubDive)
            (OnBridge Captain)
            (OnBridge Navigator)
            (SubNotBeen ?to )
            (SubAt ?from)
          
        )
    :effect
        (and
            (SubRoute ?from  ?to )
            (not (SubAt ?from ))
            (not (SubNotBeen ?to ))
            (SubAt ?to )
        )
)

;Moves personel to the launch bay.
(:action PersonelToLaunchBay
    :parameters
        (?who - Personel)
    :effect 
        (and
            (InBay ?who )      
        )
)

;Launches any type of AUV, it will launch the correct AUV according to the 
;mission objective. It will not launch if a squid is in the same location as the 
;sub.
(:action LaunchAUV
    :parameters
        (?Type - Auv ?where - Location)
    :precondition
        (and
            (SubAt ?where)
            (not(GiantSquidLoc ?where))
            (InBay Engineer)
            (AuvInBay ?Type)
            (SubDive)
        )
    :effect
        (and    
            (not(AuvInBay ?Type))
            (AuvLoc ?where)
        )
)

;Retracts the any type of AUV back into the launch bay.
(:action RetractAUV
    :parameters
        (?Type - Auv ?where - Location)
    :precondition
        (and
            (not(AuvInBay ?Type))
            (AuvLoc ?where)
            (InBay Engineer)
            (SubAt ?where)
            (SubDive)
        )
    :effect
        (and 
            (AuvInBay ?Type)
        )
        
)

;Action of Inspection AUV taking a picture of a target. 
(:action TakePic
    :parameters
        (?where - Location ?what - Treasures)
    :precondition
        (and
            (not(AuvInBay InspecAuv))
            (AuvInBay ManAuv)
            (AuvLoc ?where)
            (TargetLoc ?what ?where)
            (SubDive)
            (SubAt ?where)
        )
    :effect
        (and
            (Pic ?what)
        )
)

;Transfers the pictures captured to the sub's database.
(:action TransferPicToSub
    :parameters
        (?what - Treasures)
    :precondition
        (and
            (AuvInBay InspecAuv)
            (Pic ?what )
        )
    :effect
        (and
            (TransferedToDB Pic ?what SubDB)
        )
)
;;
;(:action TransferPicToSub
;   :parameters
;       (?what ?Type )
;   :precondition
;        (or
;            (when (Document Pic ?what)
;                (and (AuvInBay InspecAuv) (Pic ?what))
;            )
;            (when (Document Report ?what)
;                (and (Report ?what))
;            )
;        )
;    :effect
;        (and
;            (TransferedToDB ?Type ?what SubDB)
;        )
;)

;Action of the manipulation AUV picking up an artifact.
(:action PickUpArtifact
    :parameters
        (?what - Treasures ?where - Location)
    :precondition
        (and 
            (not(AuvInBay ManAuv))
            (AuvInBay InspecAuv)
            (AuvLoc ?where)
            (ArtLoc ?what ?where)
            (HandEmpty)
            (SubAt ?where)
            (SubDive)
        )
    :effect
        (and
            (not(HandEmpty))
            (Holding ?what)
        )
)

;Unlading the collected artifact from the manipulation AUV.
(:action UnloadArtifact
    :parameters
        (?what - Treasures)
    :precondition
        (and
            (AuvInBay ManAuv)
            (Holding ?what)
            (not (ObjectInBay ?what))
            (not(HandEmpty))
        )
    :effect
        (and
            (ObjectInBay ?what)
            (HandEmpty)
        )
)

;Scientist bringing the artifact into the lab for examination.
(:action GoToLab
    :parameters
        (?what -Treasures)
    :precondition
        (and
            (InBay Scientist)
            (ObjectInBay ?what)
        )
    :effect
        (and
            (InLab scientist)
            (ObjectInLab ?what)
        )
)

;Scientist makes a report of the artifact.
(:action MakeReport
    :parameters
        (?what - Treasures)
    :precondition
        (and
            (InLab Scientist)
            (ObjectInLab ?what)
        )
    :effect
        (and
            (Report ?what)
        )
)

;Transfer of the artifact report to the sub's database.
(:action TransferReportToSub
    :parameters
        (?what -Treasures )
    :precondition
        (and
            (Report ?what )
        )
    :effect
        (and
            (TransferedToDB Report ?what SubDB)
        )
)


;Data transfer from the sub to the sea port.
(:action TransferToSeaPort
    :parameters
        (?what -Treasures ?Type - Documents)
    :precondition
        (and 
            (SubResurface)
            (OnBridge ComOfficer)
            (TransferedToDB ?Type ?what SubDB)
            
        )
    :effect
        (and
            (TransferedToDB ?Type ?what SeaPortDB)
            
        )
)


)
